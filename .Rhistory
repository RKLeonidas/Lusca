library(dplyr)
library(magrittr)
library(rvest)
library(xml2)
#Colocar o site em um objeto
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
View(lego_movie)
#Html nodes é pra vc dizer o nó que vc quer chegar, no nosso caso queremos ir pro nó strong e depois o nó spam
html_nodes(lego_movie, "strong span")
#Estamos colocando a nota do filme em um objeto chamado rating
#O Html_text vai pegar a informação e colocar em texto, o texto no código html sempre fica entre ><
rating<-lego_movie %>%
html_nodes("strong span") %>%
html_text() %>%
as.numeric()
#Colocar o titulo em um objeto chamado Title
title<-lego_movie %>%
html_nodes("h1") %>%
html_text()
#Criar uma base de dados no R usa o comando data.frame
data.frame(title,rating)
data.frame(Filmes=title,Nota_no_IMDB=rating)
###########Criando a função para adicionar vários filmes##############
crawler_imdb<-function(imdb_url){
lego_movie<-read_html(imdb_url)
rating<-lego_movie %>%
html_nodes("strong span") %>%
html_text() %>%
as.numeric()
title<-lego_movie %>%
html_nodes("h1") %>%
html_text()
data.frame(Filmes=title,Nota_no_IMDB=rating)
}
View(crawler_imdb)
#Testando Crowler com o Top100
library(rvest)
library(xml2)
100_most_popular<-read_html("https://www.imdb.com/chart/moviemeter/?ref_=nv_mv_mpm")
100most_popular<-read_html("https://www.imdb.com/chart/moviemeter/?ref_=nv_mv_mpm")
most_popular<-read_html("https://www.imdb.com/chart/moviemeter/?ref_=nv_mv_mpm")
most_popular<-read_html("https://www.imdb.com/chart/moviemeter/?ref_=nv_mv_mpm")
html_nodes(most_popular,"td a")
html_nodes(most_popular,"tr td a")
#Html nodes é pra vc dizer o nó que vc quer chegar, no nosso caso queremos ir pro nó strong e depois o nó spam
html_nodes(lego_movie, "strong span")
#Colocar o site em um objeto
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
#Html nodes é pra vc dizer o nó que vc quer chegar, no nosso caso queremos ir pro nó strong e depois o nó spam
html_nodes(lego_movie, "strong span")
html_nodes(most_popular,"td strong")
html_nodes(most_popular,"td a")
title<-most_popular %>%
html_nodes("td a") %>%
html_text()
title
nota<-most_popular %>%
html_nodes("td strong") %>%
html_text() %>%
as.numeric()
data.frame(title,nota)
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes(top_rated,"td a")
title<-top_rated %>%
html_nodes("td a") %>%
html_text()
nota<-top_rated %>%
html_nodes("td strong") %>%
html_text() %>%
as.numeric()
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
title<-top_rated %>%
html_nodes("td a") %>%
html_text()
title
nota<-top_rated %>%
html_nodes("td strong") %>%
html_text() %>%
as.list()
View(nota)
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes(top_rated,"td a")
title<-top_rated %>%
html_nodes("td a") %>%
html_text() %>%
as.list()
View(title)
nota<-top_rated %>%
html_nodes("td strong") %>%
html_text() %>%
as.data.frame()
View(nota)
title<-top_rated %>%
html_nodes("td a") %>%
html_text() %>%
as.data.frame()
View(title)
duplicated(title)
duplicated(title,fromLast = TRUE)
duplicados<-duplicated(title,fromLast = TRUE)
which(duplicados)
title(!duplicados)
duplicados<-duplicated(title,fromLast = TRUE) %>%
which()
title(!duplicados)
title1(!duplicados)
title(which(duplicados))
unique(title)
()
unique(title) %>%
as.data.frame()
View(title)
unique(title) %>%
as.data.frame("Título")
unique(title) %>%
as.data.frame(Título)
unique(title) %>%
as.data.frame()
Título<-unique(title) %>%
Título<-unique(title)
Título<-unique(title)
View(Título)
Filme<-Título[(-1),]
Filme
as.data.frame(Filme)
data.frame(Filme,nota)
as.list(Filme)
as.data.frame(Filme)
View(Título)
View(Título)
View(title)
as.data.frame(Filme)
data.frame(Filme)
data.frame(nota)
data.frame(nota,Filme)
Filme<-Título
data.frame(nota,Filme)
data.frame(Filme,nota)
View(Filme)
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes("tr td")
html_nodes("tr a")
html_nodes(top_rated,"tr td")
html_nodes(top_rated,"tr a")
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_text()
data.frame(Titulo)
titulo.frame<-data.frame(Titulo)
View(titulo.frame)
inferno
#inferno
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes(top_rated,"tr a")
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_text()
titulo.frame<-data.frame(Titulo)
library(dplyr)
Titulo %>%
filter("")
Titulo %>%
filter("""")
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_attr()
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_attr("tr a")
#Testando Crowler com o Top100
library(rvest)
library(xml2)
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes(top_rated,"tr a")
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_text()
titulo.frame<-data.frame(Titulo)
View(titulo.frame)
Titulo
titulo.frame
rep(1)
rep(1:10)
rep(1:10, 2)
rep(1:10, 2)
rep(1,, 2)
seq(1:10)
seq(1:10, 2)
seq(1,10, 2)
linhas_impar <- seq(1, nrow(tabela), 2)
linhas_impar <- seq(1, nrow(titulo.frame), 2)
linhas_impar
titulo.frame[-linhas_impoar, ]
titulo.frame[-linhas_impar, ]
Movies<-titulo.frame[-linhas_impar, ]
Movies
Movies.frame<-Movies
#Testando Crowler com o Top100
library(rvest)
library(xml2)
top_rated<-read_html("https://www.imdb.com/chart/top/?ref_=nv_mv_250")
html_nodes(top_rated,"tr a")
Titulo<-top_rated %>%
html_nodes("tr a") %>%
html_text()
titulo.frame<-data.frame(Titulo)
titulo.f
linhas_impar <- seq(2, nrow(titulo.frame), 2)
data.frame(Movies)
Movies<-titulo.frame[-linhas_impar, ]
data.frame(Movies)
